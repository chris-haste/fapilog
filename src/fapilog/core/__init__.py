"""
Fapilog v3 Core Module.

This module provides the core async error handling hierarchy with comprehensive
features including circuit breakers, retry mechanisms, fallback patterns,
audit trails, and context preservation for enterprise-grade logging systems.
"""

from .audit import (
    AuditEvent,
    AuditEventType,
    AuditLogLevel,
    AuditTrail,
    ComplianceLevel,
    CompliancePolicy,
    audit_error,
    audit_security_event,
    get_audit_trail,
)
from .circuit_breaker import (
    AsyncCircuitBreaker,
    CircuitBreakerConfig,
    CircuitBreakerManager,
    CircuitBreakerOpenError,
    CircuitState,
    circuit_breaker,
    get_circuit_breaker_manager,
)
from .config import (
    ConfigurationManager,
    ConfigurationWatcher,
    SchemaVersionManager,
    cleanup_global_configuration,
    get_configuration_manager,
    initialize_global_configuration,
)
from .context import (
    ContextManager,
    ExecutionContext,
    add_context_metadata,
    create_child_context,
    execution_context,
    get_context_manager,
    get_context_values,
    get_current_error_context,
    get_current_execution_context,
    increment_retry_count,
    preserve_context,
    set_circuit_breaker_state,
    with_component_context,
    with_context,
    with_request_context,
)
from .errors import (
    AsyncErrorContext,
    AuthenticationError,
    AuthorizationError,
    ComponentError,
    ConfigurationError,
    # Specific error types
    ContainerError,
    # Error categories and enums
    ErrorCategory,
    ErrorRecoveryStrategy,
    ErrorSeverity,
    ExternalServiceError,
    # Base error classes
    FapilogError,
    NetworkError,
    PluginError,
    PluginExecutionError,
    PluginLoadError,
    TimeoutError,
    ValidationError,
    container_id_var,
    create_error_context,
    get_error_context,
    # Context variables
    request_id_var,
    session_id_var,
    # Context functions
    set_error_context,
    user_id_var,
)
from .fallback import (
    AsyncFallbackWrapper,
    CacheFallback,
    ChainedFallback,
    FallbackConfig,
    FallbackError,
    FallbackManager,
    FallbackProvider,
    FallbackStrategy,
    FallbackTrigger,
    FunctionFallback,
    StaticValueFallback,
    fallback,
    get_fallback_manager,
    with_fallback,
)
from .marketplace import (
    MarketplaceClient,
    MarketplaceEndpoint,
    MarketplaceManager,
    MarketplacePluginInfo,
    PluginDownloadInfo,
    PluginPublishRequest,
    PluginRating,
    PluginSearchCriteria,
    cleanup_marketplace_manager,
    get_marketplace_manager,
    initialize_marketplace_manager,
)
from .plugin_config import (
    PluginConfigurationManager,
    PluginConfigurationValidator,
    PluginDependency,
    PluginMetadata,
    PluginQualityMetrics,
    PluginVersion,
    get_plugin_configuration_manager,
)
from .retry import (
    DATABASE_RETRY_CONFIG,
    EXTERNAL_SERVICE_RETRY_CONFIG,
    # Predefined configurations
    NETWORK_RETRY_CONFIG,
    AsyncRetrier,
    JitterType,
    RetryConfig,
    RetryExhaustedError,
    RetryStrategy,
    retry,
    retry_async,
)
from .settings import (
    ComplianceConfig,
    ComplianceStandard,
    CoreConfig,
    EncryptionMethod,
    FapilogSettings,
    LogLevel,
    MarketplaceConfig,
    ObservabilityConfig,
    PluginConfig,
    PluginDiscoveryMethod,
    SecurityConfig,
    get_settings,
    load_settings,
    reload_settings,
    reset_settings,
)
from .validation import (
    AsyncValidator,
    ComplianceValidator,
    FieldValidationRule,
    ModelValidationRule,
    QualityGateValidator,
    ValidationRule,
    get_async_validator,
    get_compliance_validator,
    get_quality_gate_validator,
)

__all__ = [
    # Error handling core
    "FapilogError",
    "AsyncErrorContext",
    "ErrorCategory",
    "ErrorSeverity",
    "ErrorRecoveryStrategy",
    # Specific error types
    "ContainerError",
    "ComponentError",
    "PluginError",
    "PluginLoadError",
    "PluginExecutionError",
    "NetworkError",
    "TimeoutError",
    "ValidationError",
    "AuthenticationError",
    "AuthorizationError",
    "ExternalServiceError",
    "ConfigurationError",
    # Context management
    "ExecutionContext",
    "ContextManager",
    "execution_context",
    "preserve_context",
    "with_context",
    "get_current_execution_context",
    "get_current_error_context",
    "add_context_metadata",
    "increment_retry_count",
    "set_circuit_breaker_state",
    "get_context_values",
    "create_child_context",
    "with_request_context",
    "with_component_context",
    "get_context_manager",
    # Context variables
    "request_id_var",
    "user_id_var",
    "session_id_var",
    "container_id_var",
    # Context functions
    "set_error_context",
    "get_error_context",
    "create_error_context",
    # Circuit breaker
    "AsyncCircuitBreaker",
    "CircuitBreakerConfig",
    "CircuitBreakerManager",
    "CircuitBreakerOpenError",
    "CircuitState",
    "circuit_breaker",
    "get_circuit_breaker_manager",
    # Retry mechanism
    "AsyncRetrier",
    "RetryConfig",
    "RetryExhaustedError",
    "RetryStrategy",
    "JitterType",
    "retry_async",
    "retry",
    "NETWORK_RETRY_CONFIG",
    "DATABASE_RETRY_CONFIG",
    "EXTERNAL_SERVICE_RETRY_CONFIG",
    # Fallback mechanisms
    "AsyncFallbackWrapper",
    "FallbackConfig",
    "FallbackError",
    "FallbackManager",
    "FallbackProvider",
    "FallbackStrategy",
    "FallbackTrigger",
    "StaticValueFallback",
    "FunctionFallback",
    "CacheFallback",
    "ChainedFallback",
    "fallback",
    "get_fallback_manager",
    "with_fallback",
    # Audit trails
    "AuditEvent",
    "AuditEventType",
    "AuditLogLevel",
    "AuditTrail",
    "ComplianceLevel",
    "CompliancePolicy",
    "audit_error",
    "audit_security_event",
    "get_audit_trail",
    # Configuration and settings
    "FapilogSettings",
    "CoreConfig",
    "PluginConfig",
    "ComplianceConfig",
    "SecurityConfig",
    "ObservabilityConfig",
    "MarketplaceConfig",
    "LogLevel",
    "PluginDiscoveryMethod",
    "ComplianceStandard",
    "EncryptionMethod",
    "load_settings",
    "get_settings",
    "reload_settings",
    "reset_settings",
    # Configuration management
    "ConfigurationManager",
    "ConfigurationWatcher",
    "SchemaVersionManager",
    "get_configuration_manager",
    "initialize_global_configuration",
    "cleanup_global_configuration",
    # Validation
    "AsyncValidator",
    "ComplianceValidator",
    "QualityGateValidator",
    "ValidationRule",
    "FieldValidationRule",
    "ModelValidationRule",
    "get_async_validator",
    "get_compliance_validator",
    "get_quality_gate_validator",
    # Plugin configuration
    "PluginMetadata",
    "PluginVersion",
    "PluginDependency",
    "PluginQualityMetrics",
    "PluginConfigurationValidator",
    "PluginConfigurationManager",
    "get_plugin_configuration_manager",
    # Marketplace
    "MarketplaceEndpoint",
    "MarketplacePluginInfo",
    "PluginSearchCriteria",
    "PluginRating",
    "PluginDownloadInfo",
    "PluginPublishRequest",
    "MarketplaceClient",
    "MarketplaceManager",
    "get_marketplace_manager",
    "initialize_marketplace_manager",
    "cleanup_marketplace_manager",
]
