name: Documentation Build

on:
  push:
    branches: [main, develop]
    paths: ["docs/**", "src/**", "*.py", "pyproject.toml"]
  pull_request:
    branches: [main, develop]
    paths: ["docs/**", "src/**", "*.py", "pyproject.toml"]

permissions:
  contents: read

jobs:
  build-docs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('docs/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt

      - name: Install project dependencies
        run: |
          pip install -e .

      - name: Build documentation
        run: |
          cd docs
          sphinx-build -b html . _build/html

      - name: Verify build output
        run: |
          cd docs
          python verify_build.py
          # Harden: fail if any .rst files exist in docs
          if find . -name "*.rst" | grep -q ".rst"; then
            echo "Error: .rst files found in docs/ but documentation is Markdown-only.";
            find . -name "*.rst" -print;
            exit 1;
          fi

      - name: Validate internal links (non-blocking during migration)
        run: |
          cd docs
          python validate_links.py --allow-broken

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docs-build-${{ matrix.python-version }}
          path: docs/_build/html/
          retention-days: 7

  deploy-docs:
    needs: build-docs
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt
          pip install -e .

      - name: Build documentation for deployment
        run: |
          cd docs
          sphinx-build -b html . _build/html
          # Harden: fail if any .rst files exist in docs
          if find . -name "*.rst" | grep -q ".rst"; then
            echo "Error: .rst files found in docs/ but documentation is Markdown-only.";
            find . -name "*.rst" -print;
            exit 1;
          fi

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/_build/html
          force_orphan: false
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'docs: update documentation [skip ci]'

  link-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt

      - name: Check for broken links (non-blocking during migration)
        run: |
          cd docs
          python validate_links.py --allow-broken

  build-quality:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt

      - name: Check documentation quality
        run: |
          cd docs
          # Check for common documentation issues
          echo "Checking for TODO items..."
          grep -r "TODO" . --include="*.md" || true
          
          echo "Checking for FIXME items..."
          grep -r "FIXME" . --include="*.md" || true
          
          echo "Checking for broken links..."
          python validate_links.py --allow-broken 